{"version":3,"sources":["../../../src/tools/__tests__/buildQuery.test.js"],"names":["test","require","buildQuery","t","ok","equals","end","query","a","b","c","e"],"mappings":"AAAA;;;;AAEA,IAAMA,OAAOC,QAAQ,WAAR,CAAb;AACA,IAAMC,aAAaD,QAAQ,eAAR,CAAnB;;AAEAD,KAAK,kBAAL,EAAyB,aAAK;AAC5BG,IAAEC,EAAF,CAAKF,UAAL;AACAC,IAAEE,MAAF,QAAgBH,UAAhB,yCAAgBA,UAAhB,GAA4B,UAA5B;AACAC,IAAEG,GAAF;AACD,CAJD;;AAMAN,KAAK,YAAL,EAAmB,aAAK;AACtB,MAAIO,QAAQ;AACVC,OAAG,CADO;AAEVC,OAAG,KAFO;AAGVC,OAAG,IAHO;AAIVC,OAAG;AAJO,GAAZ;AAMAR,IAAEE,MAAF,CAASH,WAAWK,KAAX,CAAT,EAA4B,+CAA5B;AACAJ,IAAEG,GAAF;AACD,CATD","file":"buildQuery.test.js","sourcesContent":["'use strict'\n\nconst test = require('blue-tape')\nconst buildQuery = require('../buildQuery')\n\ntest('buildQuery is ok', t => {\n  t.ok(buildQuery)\n  t.equals(typeof buildQuery, 'function')\n  t.end()\n})\n\ntest('buildQuery', t => {\n  let query = {\n    a: 1,\n    b: 'foo',\n    c: true,\n    e: 'name=foo; value!=1'\n  }\n  t.equals(buildQuery(query), 'a=1&b=foo&c=true&e=name%3Dfoo%3B%20value!%3D1')\n  t.end()\n})\n"]}