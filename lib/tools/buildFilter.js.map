{"version":3,"sources":["../../src/tools/buildFilter.js"],"names":["getTimeString","require","isObject","isSimpleValue","createValueSelector","path","value","Error","selector","createCollectionSelector","sel","Array","reduce","res","v","concat","selectors","eq","operator","gt","gte","lt","lte","ne","in","collection","nin","not","comparisonSelectors","Object","keys","key","op","invertFilterPart","fp","getFilterParts","pathLen","length","curKey","val","slice","headPath","map","parts","error","message","module","exports","buildFilter","filter","filterParts","part","join","undefined","Date","sort","p1","p2"],"mappings":"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","file":"buildFilter.js","sourcesContent":["'use strict'\n\nconst getTimeString = require('./getTimeString')\nconst isObject = require('./isObject')\nconst isSimpleValue = require('./isSimpleValue')\n\nlet createValueSelector = selector => (path, value) => {\n  if (!isSimpleValue(value)) {\n    throw new Error(`value must to be string, number, date or null`)\n  }\n  return [[path, selector, value]]\n}\n\nlet createCollectionSelector = selector => {\n  const sel = createValueSelector(selector)\n  return (path, value) => {\n    if (!(value instanceof Array)) {\n      throw new Error(`selector value must to be an array`)\n    }\n    return value.reduce((res, v) => res.concat(sel(path, v)), [])\n  }\n}\n\n// Comparison selectors\nconst selectors = {\n  eq: { operator: '=' },\n  gt: { operator: '>' },\n  gte: { operator: '>=' },\n  lt: { operator: '<' },\n  lte: { operator: '>=' },\n  ne: { operator: '!=' },\n  in: { operator: '=', collection: true },\n  nin: { operator: '!=', collection: true }\n}\n\nselectors.eq.not = selectors.ne\nselectors.gt.not = selectors.lte\nselectors.gte.not = selectors.lt\nselectors.lt.not = selectors.gte\nselectors.lte.not = selectors.gt\nselectors.ne.not = selectors.eq\nselectors.in.not = selectors.nin\nselectors.nin.not = selectors.in\n\nconst comparisonSelectors = Object.keys(selectors).reduce((res, key) => {\n  let op = selectors[key]\n  res['$' + key] = (op.collection ? createCollectionSelector : createValueSelector)(op)\n  return res\n}, {})\n\n// Logical selectors\nconst invertFilterPart = fp => [fp[0], fp[1].not, fp[2]]\n\nfunction getFilterParts (path, value) {\n  const pathLen = path.length\n  const curKey = pathLen ? path[pathLen - 1] : null\n\n  switch (true) {\n    // Mongo logical selectors\n    case curKey === '$and':\n      if (!(value instanceof Array)) {\n        throw new Error(`$and: selector value must to be an array`)\n      }\n      return value.reduce((res, val) => res\n        .concat(getFilterParts(path.slice(0, -1), val)), [])\n\n    case curKey === '$not':\n      if (!isObject(value)) {\n        throw new Error(`$not: selector value must to be an object`)\n      }\n      let headPath = path.slice(0, -1)\n      return getFilterParts(headPath, value)\n        .map(invertFilterPart)\n        .concat([[headPath, selectors.eq, null]])\n\n    case curKey === '$exists':\n      if (typeof value !== 'boolean') {\n        throw new Error(`$exists: elector value must to be boolean`)\n      }\n      return [[path.slice(0, -1), selectors.ne, null]]\n\n    // Mongo comparison selectors\n    case !!comparisonSelectors[curKey]:\n      let parts\n      try {\n        parts = comparisonSelectors[curKey](path.slice(0, -1), value)\n      } catch (error) {\n        throw new Error(`${curKey}: ${error.message}`)\n      }\n      return parts\n\n    // Array\n    case value instanceof Array:\n      return value.reduce((res, val) => res\n        .concat(getFilterParts(path, val)), [])\n\n    // Object\n    case !isSimpleValue(value):\n      return Object.keys(value).reduce((res, key) => res\n        .concat(getFilterParts(path.concat(key), value[key])), [])\n\n    // some other value\n    default:\n      return [[path, selectors.eq, value]]\n  }\n}\n\nmodule.exports = function buildFilter (filter) {\n  if (!isObject(filter)) {\n    throw new Error('filter must to be an object')\n  }\n\n  let filterParts = getFilterParts([], filter)\n\n  // преобразование ключа в строку\n  filterParts = filterParts.map(part => [part[0].join('.'), part[1], part[2]])\n\n  return filterParts\n    // конвертация операторов и значений в строку\n    .map(part => {\n      let key = part[0]\n      let operator = part[1].operator\n      let value = part[2]\n      switch (true) {\n        case value === undefined:\n          throw new Error(`filter \"${key}\" key value is undefined`)\n\n        case value === null:\n          return [key, operator, '']\n\n        case value instanceof Date:\n          return [key, operator, getTimeString(value)]\n\n        case typeof value === 'string':\n        case typeof value === 'number':\n          return [key, operator, value]\n\n        default:\n          throw new Error(`filter \"${key}\" key value is incorrect`)\n      }\n    })\n    .map(part => `${part[0]}${part[1]}${part[2]}`)\n    .sort((p1, p2) => {\n      if (p1 > p2) { return 1 }\n      if (p1 < p2) { return -1 }\n      return 0\n    })\n    .join(';')\n}\n\n"]}