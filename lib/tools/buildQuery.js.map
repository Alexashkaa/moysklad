{"version":3,"sources":["../../src/tools/buildQuery.js"],"names":["buildFilter","require","module","exports","buildQuery","query","Object","keys","reduce","res","key","addPart","indexOf","val","Error","concat","encodeURIComponent","Array","forEach","map","kv","join"],"mappings":"AAAA;;;;AAEA,IAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAC3C,SAAOC,OAAOC,IAAP,CAAYF,KAAZ,EACJG,MADI,CACG,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpB,QAAIC,UAAU,SAAVA,OAAU,MAAO;AACnB,UAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgCC,OAAhC,QAA+CC,GAA/C,yCAA+CA,GAA/C,OAAwD,CAAC,CAA7D,EAAgE;AAC9D,cAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACD;AACDL,YAAMA,IAAIM,MAAJ,CAAW,CAAC,CAACL,GAAD,EAAMM,mBAAmBH,GAAnB,CAAN,CAAD,CAAX,CAAN;AACD,KALD;;AAOA,QAAIH,QAAQ,QAAZ,EAAsB;AACpBC,cAAQX,YAAYK,MAAMK,GAAN,CAAZ,CAAR;AACD,KAFD,MAEO,IAAIL,MAAMK,GAAN,KAAc,IAAlB,EAAwB;AAC7BC,cAAQ,EAAR;AACD,KAFM,MAEA,IAAIN,MAAMK,GAAN,aAAsBO,KAA1B,EAAiC;AACtCZ,YAAMK,GAAN,EAAWQ,OAAX,CAAmBP,OAAnB;AACD,KAFM,MAEA;AACLA,cAAQN,MAAMK,GAAN,CAAR;AACD;;AAED,WAAOD,GAAP;AACD,GApBI,EAoBF,EApBE,EAqBJU,GArBI,CAqBA;AAAA,WAASC,GAAG,CAAH,CAAT,SAAkBA,GAAG,CAAH,CAAlB;AAAA,GArBA,EAsBJC,IAtBI,CAsBC,GAtBD,CAAP;AAuBD,CAxBD","file":"buildQuery.js","sourcesContent":["'use strict'\n\nconst buildFilter = require('./buildFilter')\n\nmodule.exports = function buildQuery (query) {\n  return Object.keys(query)\n    .reduce((res, key) => {\n      let addPart = val => {\n        if (['string', 'number', 'boolean'].indexOf(typeof val) === -1) {\n          throw new Error('url query key value must to be string, number or boolean')\n        }\n        res = res.concat([[key, encodeURIComponent(val)]])\n      }\n\n      if (key === 'filter') {\n        addPart(buildFilter(query[key]))\n      } else if (query[key] == null) {\n        addPart('')\n      } else if (query[key] instanceof Array) {\n        query[key].forEach(addPart)\n      } else {\n        addPart(query[key])\n      }\n\n      return res\n    }, [])\n    .map(kv => `${kv[0]}=${kv[1]}`)\n    .join('&')\n}\n"]}