{"version":3,"sources":["../../src/tools/loadRows.js"],"names":["have","require","module","exports","client","collection","query","argumentsObject","meta","nextHref","rows","pages","size","limit","offset","href","parseUri","Error","push","GET","path","Object","assign","Promise","all","res","pos","concat","reduce","loadRows"],"mappings":"AAAA;;;;AAEA,IAAMA,OAAOC,QAAQ,SAAR,CAAb;;AAEAC,OAAOC,OAAP;AAAA,uDAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC0BH,YAAgB,CACvD,EAAEI,QAAQ,QAAV,EAAoBC,YAAY,qBAAhC,EAAuDC,OAAO,SAA9D,EADuD,EAEvDN,KAAKO,eAFkD,CAAhB,CAD1B,EACTH,MADS,SACTA,MADS,EACDC,UADC,SACDA,UADC,sBACWC,KADX,EACWA,KADX,+BACmB,EADnB;;AAMf;;AANe,gBAOVD,WAAWG,IAAX,CAAgBC,QAPN;AAAA;AAAA;AAAA;;AAAA,6CAQNJ,WAAWK,IARL;;AAAA;AAWXC,iBAXW,GAWH,CAACN,UAAD,CAXG;AAAA,+BAaeA,WAAWG,IAb1B,EAaTI,IAbS,oBAaTA,IAbS,EAaHC,KAbG,oBAaHA,KAbG,EAaIC,MAbJ,oBAaIA,MAbJ;AAcXC,gBAdW,GAcJX,OAAOY,QAAP,CAAgBX,WAAWG,IAAX,CAAgBO,IAAhC,CAdI;;;AAgBfD,sBAAUD,KAAV;;AAhBe,kBAkBXP,MAAMO,KAAN,IAAe,IAlBJ;AAAA;AAAA;AAAA;;AAAA,kBAmBTP,MAAMO,KAAN,IAAe,CAnBN;AAAA;AAAA;AAAA;;AAAA,kBAmBe,IAAII,KAAJ,CAAU,sCAAV,CAnBf;;AAAA;AAoBbJ,oBAAQP,MAAMO,KAAd;;AApBa;;AAuBf,mBAAOD,OAAOE,MAAd,EAAsB;AACpBH,oBAAMO,IAAN,CAAWd,OAAOe,GAAP,CAAWJ,KAAKK,IAAhB,EACTC,OAAOC,MAAP,CAAc,EAAd,EAAkBP,KAAKT,KAAL,IAAc,EAAhC,EAAoCA,KAApC,EAA2C,EAAEQ,cAAF,EAA3C,CADS,CAAX;AAEAA,wBAAUD,KAAV;AACD;;AA3Bc;AAAA,mBA6BGU,QAAQC,GAAR,CAAYb,KAAZ,CA7BH;;AAAA;AAAA,0BA6B8B,UAACc,GAAD,EAAMC,GAAN;AAAA,qBAAcD,IAAIE,MAAJ,CAAWD,IAAIhB,IAAf,CAAd;AAAA,aA7B9B;;AAAA,0BA6BkE,EA7BlE;AA6BXA,gBA7BW,iBA6BuBkB,MA7BvB;AAAA,6CA+BRlB,IA/BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA,WAAgCmB,QAAhC;AAAA;AAAA;;AAAA,SAAgCA,QAAhC;AAAA","file":"loadRows.js","sourcesContent":["'use strict'\n\nconst have = require('../have')\n\nmodule.exports = async function loadRows () {\n  let { client, collection, query = {} } = have(arguments, [\n    { client: 'Object', collection: 'Moysklad.Collection', query: 'opt obj' },\n    have.argumentsObject\n  ])\n\n  // TODO Коллекция может быть не загружена!\n  if (!collection.meta.nextHref) {\n    return collection.rows\n  }\n\n  let pages = [collection]\n\n  let { size, limit, offset } = collection.meta\n  let href = client.parseUri(collection.meta.href)\n\n  offset += limit\n\n  if (query.limit != null) {\n    if (query.limit <= 0) throw new Error('query.limit should be greater then 0')\n    limit = query.limit\n  }\n\n  while (size > offset) {\n    pages.push(client.GET(href.path,\n      Object.assign({}, href.query || {}, query, { offset })))\n    offset += limit\n  }\n\n  let rows = (await Promise.all(pages)).reduce((res, pos) => res.concat(pos.rows), [])\n\n  return rows\n}\n"]}