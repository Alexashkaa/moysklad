{"version":3,"sources":["../../../../src/extensions/queue/__tests__/queue.test.js"],"names":["test","require","Queue","sleep","t","ok","equals","end","queue","constraintPeriod","tasksPerPeriod","parallelTaskCount","processTask","task","result","getAsyncTask","number","executionTime","timeLog","push","added","getCurTime","started","processed","CONSTRAINT_PERIOD","TASKS_PER_PERIOD","PARALLEL_TASK_COUNT","startTime","Date","now","tasks","Promise","all","tasksResults","deepEqual","timeline","reduce","res","log","Object","assign","prev","next","fail","task1","parallelTasks","task2","a1","a2","b2","periodStart","periodTasks","filter","length"],"mappings":"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","file":"queue.test.js","sourcesContent":["'use strict'\n\n// const debug = require('debug')\nconst test = require('blue-tape')\nconst Queue = require('../queue')\nconst sleep = require('../../../tools/sleep')\n\n// TODO remove\n// process.env.DEBUG = 'queue'\n// global.DEBUG = true\n\n// let debugLog = []\n// global.debug = function (msg) {\n//   debugLog.push(msg)\n// }\n\ntest('Queue is ok', t => {\n  t.ok(Queue)\n  t.equals(typeof Queue, 'function')\n  t.end()\n})\n\ntest('Queue instance', t => {\n  let queue = new Queue()\n  t.ok(queue, 'should be truthy')\n  t.equals(queue.constraintPeriod, 1000, 'should have `constraintPeriod` property default to 1000')\n  t.equals(queue.tasksPerPeriod, 5, 'should have `tasksPerPeriod` property default to 5')\n  t.equals(queue.parallelTaskCount, 2, 'should have `parallelTaskCount` property default to 2')\n  t.equals(typeof queue.processTask, 'function', 'should have `processTask` method')\n  t.end()\n})\n\ntest('Queue#processTask (simple)', async t => {\n  let queue = new Queue()\n  let task = async () => {\n    await sleep(10)\n    return 'foo'\n  }\n  let result = await queue.processTask(task)\n  t.equals(result, 'foo', 'should process async task')\n})\n\n// https://docs.google.com/spreadsheets/d/1GX4OaolG_AmZ-NbUKI9XcDhewV-jFLCn29WWn-thEf0/edit\ntest('Queue#processTask (complex)', async t => {\n  // debugLog = []\n  const CONSTRAINT_PERIOD = 100\n  const TASKS_PER_PERIOD = 3\n  const PARALLEL_TASK_COUNT = 2\n\n  let queue = new Queue({\n    constraintPeriod: CONSTRAINT_PERIOD,\n    tasksPerPeriod: TASKS_PER_PERIOD,\n    parallelTaskCount: PARALLEL_TASK_COUNT\n  })\n\n  let startTime = Date.now()\n  let getCurTime = () => Date.now() - startTime\n  let timeLog = []\n\n  function getAsyncTask (number, executionTime) {\n    timeLog.push({ number, added: getCurTime() })\n    return async function () {\n      timeLog.push({ number, started: getCurTime() })\n      await sleep(executionTime)\n      timeLog.push({ number, processed: getCurTime() })\n      return number\n    }\n  }\n\n  let tasks = [\n    queue.processTask(getAsyncTask(0, 20)),\n    queue.processTask(getAsyncTask(1, 60)),\n    queue.processTask(getAsyncTask(2, 130)),\n    queue.processTask(getAsyncTask(3, 20)),\n    queue.processTask(getAsyncTask(4, 30)),\n    queue.processTask(getAsyncTask(5, 30)),\n    queue.processTask(getAsyncTask(6, 70)),\n    queue.processTask(getAsyncTask(7, 170))\n  ]\n\n  await sleep(100)\n  tasks.push(queue.processTask(getAsyncTask(8, 20)))\n\n  await sleep(10)\n  tasks.push(queue.processTask(getAsyncTask(9, 20)))\n\n  await sleep(10)\n  tasks.push(queue.processTask(getAsyncTask(10, 70)))\n\n  await sleep(10)\n  tasks.push(queue.processTask(getAsyncTask(11, 20)))\n\n  let tasksResults = await Promise.all(tasks)\n\n  t.deepEqual(tasksResults, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 'should return tasks results')\n\n  let timeline = timeLog.reduce((res, log) => {\n    res[log.number] = Object.assign((res[log.number] || {}), log)\n    return res\n  }, [])\n\n  // Задачи выполняются последовательно\n  timeline.reduce((prev, next) => {\n    if (prev.started > next.started) {\n      t.fail(`task#${prev.number} start before task#${next.number}`)\n    }\n    return next\n  })\n\n  // Не более заданного кол-ва одновременно исполняемых задач\n  for (let task1 of timeline) {\n    let parallelTasks = 0\n    for (let task2 of timeline) {\n      if (task1 !== task2) {\n        let [a1, a2, b2] = [task1.started, task2.started, task2.processed]\n        if (a2 <= a1 && a1 < b2) { parallelTasks++ }\n      }\n    }\n    if (parallelTasks > PARALLEL_TASK_COUNT - 1) {\n      t.fail(`more than ${PARALLEL_TASK_COUNT - 1} tasks at the same time for task#${task1.number}`)\n    }\n  }\n\n  // Не более заданного кол-ва задач за указанных период\n  for (let task1 of timeline) {\n    let periodStart = task1.started - CONSTRAINT_PERIOD\n    let periodTasks = timeline.filter(task2 => {\n      if (task2 !== task1) {\n        return task2.started >= periodStart && task2.started < task1.started\n      }\n    })\n    if (periodTasks.length > TASKS_PER_PERIOD) {\n      t.fail(`more than ${TASKS_PER_PERIOD} tasks for task#${task1.number}`)\n    }\n  }\n\n  // console.log(timeline)\n  // console.log(debugLog)\n})\n"]}